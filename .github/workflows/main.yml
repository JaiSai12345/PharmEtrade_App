name: Push DockerHub Image to AWS ECR

on:
  workflow_dispatch:  # Manually trigger the workflow
  push:
    branches:
      - main  # Trigger the workflow on a push to the 'main' branch

jobs:
  push_to_ecr:
    runs-on: ubuntu-latest  # The job runs on an Ubuntu runner

    steps:
      # Step 1: Checkout the repository to the GitHub Actions runner
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Optional: Limits the depth of the git history for faster checkouts

      # Step 2: Set up AWS credentials using the AWS Secrets Manager
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Login to AWS ECR (Elastic Container Registry) using AWS CLI
      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Step 4: Pull the Docker image from DockerHub
      - name: Pull DockerHub Image
        run: |
          docker pull ${{ secrets.DOCKERHUB_IMAGE }}

      # Step 5: Tag the Docker image for Amazon ECR
      - name: Tag Image for ECR
        run: |
          IMAGE_NAME=$(echo "${{ secrets.DOCKERHUB_IMAGE }}" | cut -d':' -f1 | cut -d'/' -f2)
          docker tag ${{ secrets.DOCKERHUB_IMAGE }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_NAME-latest

      # Step 6: Push the Docker image to the AWS ECR repository
      - name: Push Image to ECR
        run: |
          IMAGE_NAME=$(echo "${{ secrets.DOCKERHUB_IMAGE }}" | cut -d':' -f1 | cut -d'/' -f2)
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_NAME-latest

  notify:
    needs: push_to_ecr  # Ensure this job runs after the 'push_to_ecr' job completes
    runs-on: ubuntu-latest  # The job runs on an Ubuntu runner

    steps:
      # Step 7: Send a notification email using Gmail SMTP after the image is pushed
      - name: Send Email using Gmail SMTP
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}  # Gmail username (email address)
          password: ${{ secrets.GMAIL_PASSWORD }}  # Gmail password or app-specific password
          subject: "GitHub Actions: Docker Image Pushed to AWS ECR"
          body: "The Docker image has been successfully pushed to AWS ECR."
          to: "sainath.mandala@gmail.com"  # Recipient's email address
          from: ${{ secrets.GMAIL_USERNAME }}  # Sender's email address (same as Gmail username)
